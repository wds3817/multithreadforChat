package chuanruan.Day13;


import java.text.SimpleDateFormat;

public class Demo6 {
    public static void main(String[] args) {
        //SimpleDateFormat sdf = new SimpleDateFormat("")
        /*
        *   把一个任意的钱的数字转换为汉字表示，
        *   如： 4581.98
        *   四千五百八十一元九角八分
        *   没写出来
        */
        //String str = "102005";
        turn("10020");
//        String str1 = "二千零零零零三元";
//        String str2 = str1.replaceAll("零+", "零");
//        System.out.println(str2);

        //turn("1000000.23");
        //turn("100400045");
        // test1:
        //turn("10345");
        // test2:
        //turn("100345");
        // 千', '百', '十', '万', '千', '百', '十', '亿', '千', '百', '十', '万', '千', '百', '十', '元'
        //                  3                      7                     11                     15
       // 123456789
        //123

    }
    public static String turn(String value) {
        //中文金额单位数组
       // String[] straChineseUnit = new String[] {"分", "角", "元", "拾", "佰", "仟", "万", "拾", "佰", "仟", "亿", "拾", "佰", "仟"};
        //中文数字字符数组
        //String[] straChineseNumber = new String[] {"零", "壹", "贰", "叁", "肆", "伍", "陆", "柒", "捌", "玖"};
        StringBuffer res = new StringBuffer();
        Double d = Double.valueOf(value);
        if (d >= 1.0E17 || d <= -1.0E17) {
            res.append("超出本程序的处理范围");
        } else {
            char[] arr0 = {'千', '百', '十', '万', '千', '百', '十', '亿', '千', '百', '十', '万', '千', '百', '十', '元'};
            char[] arr1 = null;
            char[] arr2 = null;
            if (value.indexOf(".") != -1) {// 找到了小数点
                String[] strarr = value.split("\\.");
                arr1 = strarr[0].toCharArray();
                arr2 = strarr[1].toCharArray();
            } else {
                arr1 = value.toCharArray();
            }
            //遍历整数: 123      3 - 1 = 2
            for (int i = arr1.length - 1; i >= 0; i--) {
                //System.out.println(i);
                //System.out.println(arr1[arr1.length - i - 1]);
                if (arr1[arr1.length - i - 1] != '0'){ // 后加入
                     res.append(numBig(arr1[arr1.length - 1 - i]));//加入中文数字
                     //System.out.println(arr1[arr1.length - 1 -i]);
                     res.append(arr0[arr0.length - 1 - i]);// 11 - 6 = 5
                } else { // 千', '百', '十', '万', '千', '百', '十', '亿', '千', '百', '十', '万', '千', '百', '十', '元'
                    //                       3                      7                     11                     15
                    //  1 0000 0000
//
                    if (i % 4 == 0) {  //
                        if (res.substring(res.length() - 1).equals("零")) {
                            res.deleteCharAt(res.length() - 1);
                        }
                        String last = res.substring(res.length() - 1);
                        if (!res.substring(res.length() - 1).equals("亿")) {
                            res.append(arr0[arr0.length - 1 - i]);
                        }

                    }// 先拼接万
                    else {
                        if (!res.substring(res.length() - 1).equals("零")) {
                            res.append(numBig(arr1[arr1.length - 1 - i]));
                        }
                    }
                     // 再拼接零
                  //  if (arr1[arr1.length - i - 1] != '0') {
//                        if (arr1[arr1.length - i - 2] != '0') {
//                            //res.append(arr0[arr0.length - i]);
//                            //if (arr1[arr1.length - i - 1] != '0') {
//                            res.append(numBig(arr1[arr1.length - 1 - i]));
//                            //}
//                        }
                    //}
                       // res.append(numBig(arr1[arr1.length - 1 - i]));
                }
            }
            // 处理小数
            if (arr2 != null) {
                if (arr2[0] != '0') {
                    res.append(numBig(arr2[0]));
                    res.append("角");
                }
                if(arr2.length > 1 && arr2[1] != '0') {
                    res.append(numBig(arr2[1]));
                    res.append("分");
                }
            }



            /*
            for (int i = 0; i < arr1.length; i++) {
                System.out.println(arr1[i]);
            }
            System.out.println("=========================");
            for (int i = 0; i < arr2.length; i++) {
                System.out.println(arr2[i]);
            */
        }
        System.out.println(res);
        return res.toString();
    }
    public static String numBig(char c) {
        switch(c) {
            case '1': return  "壹";
            case '2': return  "贰";
            case '3': return  "叁";
            case '4': return  "肆";
            case '5': return  "伍";
            case '6': return  "陆";
            case '7': return  "柒";
            case '8': return  "捌";
            case '9': return  "玖";
            default : return  "零";
        }
       // return null;
    }



}
